{"ast":null,"code":"import _objectSpread from \"/home/anand/Desktop/test/toaster-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport * as ActionTypes from '../actions/Tweet';\nconst InitialState = {\n  commentMessages: []\n};\n\nconst TweetReducer = (state = InitialState, action) => {\n  let newState;\n\n  switch (action.type) {\n    case ActionTypes.ADD_TWEET:\n      newState = _objectSpread({}, state, {\n        commentMessages: action.value\n      });\n      return newState;\n\n    case ActionTypes.DELETE_TWEET:\n      const deleteTweet = state.commentMessages.filter(item => item.id !== action.id);\n      newState = _objectSpread({}, state, {\n        commentMessages: deleteTweet\n      });\n      return newState;\n\n    case ActionTypes.EDIT_TWEET:\n      const editedValue = state.commentMessages.map(item => {\n        if (item.id === action.item.id) {\n          item.value = action.item.value;\n          return item;\n        } else return item;\n      });\n      newState = _objectSpread({}, state, {\n        commentMessages: editedValue\n      });\n      return newState;\n\n    default:\n      return state;\n  }\n};\n\nexport default TweetReducer;","map":{"version":3,"sources":["/home/anand/Desktop/test/toaster-test/src/store/reducers/Tweet.js"],"names":["ActionTypes","InitialState","commentMessages","TweetReducer","state","action","newState","type","ADD_TWEET","value","DELETE_TWEET","deleteTweet","filter","item","id","EDIT_TWEET","editedValue","map"],"mappings":";AAAA,OAAO,KAAKA,WAAZ,MAA6B,kBAA7B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,eAAe,EAAE;AADA,CAArB;;AAIA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AACnD,MAAIC,QAAJ;;AACA,UAAQD,MAAM,CAACE,IAAf;AACI,SAAKP,WAAW,CAACQ,SAAjB;AACIF,MAAAA,QAAQ,qBACDF,KADC;AAEJF,QAAAA,eAAe,EAAEG,MAAM,CAACI;AAFpB,QAAR;AAIA,aAAOH,QAAP;;AACJ,SAAKN,WAAW,CAACU,YAAjB;AACI,YAAMC,WAAW,GAAGP,KAAK,CAACF,eAAN,CAAsBU,MAAtB,CAA8BC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYT,MAAM,CAACS,EAA1D,CAApB;AACAR,MAAAA,QAAQ,qBACDF,KADC;AAEJF,QAAAA,eAAe,EAAES;AAFb,QAAR;AAIA,aAAOL,QAAP;;AAEJ,SAAKN,WAAW,CAACe,UAAjB;AACI,YAAMC,WAAW,GAAGZ,KAAK,CAACF,eAAN,CAAsBe,GAAtB,CAA0BJ,IAAI,IAAI;AAClD,YAAIA,IAAI,CAACC,EAAL,KAAYT,MAAM,CAACQ,IAAP,CAAYC,EAA5B,EAAgC;AAC5BD,UAAAA,IAAI,CAACJ,KAAL,GAAaJ,MAAM,CAACQ,IAAP,CAAYJ,KAAzB;AACA,iBAAOI,IAAP;AACH,SAHD,MAKI,OAAOA,IAAP;AACP,OAPmB,CAApB;AAQAP,MAAAA,QAAQ,qBACDF,KADC;AAEJF,QAAAA,eAAe,EAAEc;AAFb,QAAR;AAIA,aAAOV,QAAP;;AACJ;AACI,aAAOF,KAAP;AA9BR;AAiCH,CAnCD;;AAoCA,eAAeD,YAAf","sourcesContent":["import * as ActionTypes from '../actions/Tweet';\n\nconst InitialState = {\n    commentMessages: []\n}\n\nconst TweetReducer = (state = InitialState, action) => {\n    let newState;\n    switch (action.type) {\n        case ActionTypes.ADD_TWEET:\n            newState = {\n                ...state,\n                commentMessages: action.value,\n            };\n            return newState;\n        case ActionTypes.DELETE_TWEET:\n            const deleteTweet = state.commentMessages.filter((item) => item.id !== action.id)\n            newState = {\n                ...state,\n                commentMessages: deleteTweet,\n            };\n            return newState;\n\n        case ActionTypes.EDIT_TWEET:\n            const editedValue = state.commentMessages.map(item => {\n                if (item.id === action.item.id) {\n                    item.value = action.item.value;\n                    return item;\n                }\n                else\n                    return item;\n            });\n            newState = {\n                ...state,\n                commentMessages: editedValue\n            }\n            return newState;\n        default:\n            return state;\n    }\n\n}\nexport default TweetReducer;"]},"metadata":{},"sourceType":"module"}