{"ast":null,"code":"import _slicedToArray from \"/home/anand/Desktop/test/toaster-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/anand/Desktop/test/toaster-test/src/component/ShowTweets.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport * as ActionTypes from '../store/actions/Tweet';\nimport { Card, Button, Typography } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\nconst ShowTweets = props => {\n  // React Hooks for Editing the Text and updating the values\n  const _React$useState = React.useState(0),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        editFieldId = _React$useState2[0],\n        setEditId = _React$useState2[1];\n\n  const _React$useState3 = React.useState(''),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        newText = _React$useState4[0],\n        setNewText = _React$useState4[1];\n\n  const handleEdit = (item, check) => {\n    // set default text in EditBox\n    if (check === 'edit') {\n      setNewText(item.value);\n    } // onClick of Edit Button set the id of item in text area using react hook\n\n\n    check === 'edit' ? setEditId(item.id) : setEditId(0);\n    const updateValue = {\n      id: item.id,\n      value: newText // onClick of Ok set value in redux\n\n    };\n\n    if (check === 'ok') {\n      props.handleUpdate(updateValue);\n    }\n  };\n\n  const handleTextChange = event => {\n    // onChange update the value using hook\n    setNewText(event.target.value);\n  };\n\n  if (!props.comments) {\n    return null;\n  }\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: \"card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, props.comments.map(item => {\n    return React.createElement(\"div\", {\n      className: \"card-wrapper\",\n      key: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      gutterBottom: true,\n      variant: \"h5\",\n      component: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \" \", item.value), React.createElement(Button, {\n      size: \"small\",\n      color: \"primary\",\n      onClick: () => handleEdit(item, 'edit'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Edit\"))));\n  }))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    comments: state.commentMessages\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleDelete: id => dispatch({\n      type: ActionTypes.DELETE_TWEET,\n      id\n    }),\n    handleUpdate: item => dispatch({\n      type: ActionTypes.EDIT_TWEET,\n      item\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowTweets);","map":{"version":3,"sources":["/home/anand/Desktop/test/toaster-test/src/component/ShowTweets.js"],"names":["React","connect","ActionTypes","Card","Button","Typography","Paper","Grid","ShowTweets","props","useState","editFieldId","setEditId","newText","setNewText","handleEdit","item","check","value","id","updateValue","handleUpdate","handleTextChange","event","target","comments","map","mapStateToProps","state","commentMessages","mapDispatchToProps","dispatch","handleDelete","type","DELETE_TWEET","EDIT_TWEET"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux'\nimport * as ActionTypes from '../store/actions/Tweet'\nimport { Card, Button, Typography } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\nconst ShowTweets = (props) => {\n\n    // React Hooks for Editing the Text and updating the values\n    const [editFieldId, setEditId] = React.useState(0);\n    const [newText, setNewText] = React.useState('');\n\n    const handleEdit = (item, check) => {\n\n        // set default text in EditBox\n        if (check === 'edit') {\n            setNewText(item.value);\n        }\n\n        // onClick of Edit Button set the id of item in text area using react hook\n        check === 'edit' ? setEditId(item.id) : setEditId(0);\n        const updateValue = { id: item.id, value: newText }\n\n        // onClick of Ok set value in redux\n        if (check === 'ok') {\n            props.handleUpdate(updateValue);\n        }\n    }\n\n    const handleTextChange = (event) => {\n        // onChange update the value using hook\n        setNewText(event.target.value);\n    }\n\n    if (!props.comments) {\n        return null;\n    }\n\n    return (\n        <React.Fragment>\n\n            <Card className='card'>\n                <Grid container>\n                    {props.comments.map((item) => {\n                        return <div className='card-wrapper' key={item.id}>\n                            <Grid item xs={12}>\n                                <Paper>\n                                    <Typography gutterBottom variant=\"h5\" component=\"h2\"> {item.value}</Typography>\n                                    <Button size=\"small\" color=\"primary\" onClick={() => handleEdit(item, 'edit')}>Edit</Button>\n                                </Paper>\n                            </Grid>\n                        </div>\n                    })}\n                </Grid>\n            </Card>\n        </React.Fragment>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        comments: state.commentMessages\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleDelete: (id) => dispatch({ type: ActionTypes.DELETE_TWEET, id }),\n        handleUpdate: (item) => dispatch({ type: ActionTypes.EDIT_TWEET, item })\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowTweets);"]},"metadata":{},"sourceType":"module"}