{"ast":null,"code":"import _slicedToArray from \"/home/anand/Desktop/test/toaster-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/anand/Desktop/test/toaster-test/src/component/ShowTweets.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport * as ActionTypes from '../store/actions/Tweet';\nimport { Card, Button, Typography, Paper, Grid, IconButton, CardContent } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FavouriteSelectedIcon from '@material-ui/icons/Grade';\nimport FavouriteIcon from '@material-ui/icons/GradeOutlined';\n\nconst ShowTweets = props => {\n  // React Hooks for Editing the Text and updating the values\n  const _React$useState = React.useState(''),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        newText = _React$useState2[0],\n        setNewText = _React$useState2[1];\n\n  const handleEdit = (item, check) => {\n    // set default text in EditBox\n    if (check === 'edit') {\n      setNewText(item.value);\n    }\n\n    const updateValue = {\n      id: item.id,\n      value: newText // onClick of Ok set value in redux\n\n    };\n\n    if (check === 'ok') {\n      props.handleUpdate(updateValue);\n    }\n  };\n\n  if (!props.comments) {\n    return null;\n  }\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, props.comments.map(item => {\n    return React.createElement(CardContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      xs: 12,\n      key: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"   \", item.FriendName)), React.createElement(Grid, {\n      xs: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Button, {\n      size: \"small\",\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(DeleteIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      item: true,\n      xs: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Button, {\n      size: \"small\",\n      variant: \"outlined\",\n      onClick: () => handleEdit(item, 'edit'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(FavouriteIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }))))));\n  })));\n};\n\nconst mapStateToProps = state => {\n  return {\n    comments: state.commentMessages\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleDelete: id => dispatch({\n      type: ActionTypes.DELETE_TWEET,\n      id\n    }),\n    handleUpdate: item => dispatch({\n      type: ActionTypes.EDIT_TWEET,\n      item\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowTweets);","map":{"version":3,"sources":["/home/anand/Desktop/test/toaster-test/src/component/ShowTweets.js"],"names":["React","connect","ActionTypes","Card","Button","Typography","Paper","Grid","IconButton","CardContent","DeleteIcon","FavouriteSelectedIcon","FavouriteIcon","ShowTweets","props","useState","newText","setNewText","handleEdit","item","check","value","updateValue","id","handleUpdate","comments","map","FriendName","mapStateToProps","state","commentMessages","mapDispatchToProps","dispatch","handleDelete","type","DELETE_TWEET","EDIT_TWEET"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux'\nimport * as ActionTypes from '../store/actions/Tweet'\nimport { Card, Button, Typography, Paper, Grid, IconButton, CardContent } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FavouriteSelectedIcon from '@material-ui/icons/Grade'\nimport FavouriteIcon from '@material-ui/icons/GradeOutlined'\n\n\nconst ShowTweets = (props) => {\n\n    // React Hooks for Editing the Text and updating the values\n    const [newText, setNewText] = React.useState('');\n\n    const handleEdit = (item, check) => {\n\n        // set default text in EditBox\n        if (check === 'edit') {\n            setNewText(item.value);\n        }\n\n        const updateValue = { id: item.id, value: newText }\n\n        // onClick of Ok set value in redux\n        if (check === 'ok') {\n            props.handleUpdate(updateValue);\n        }\n    }\n\n    if (!props.comments) {\n        return null;\n    }\n\n    return (\n        <React.Fragment>\n\n            <Card>\n                    {props.comments.map((item) => {\n                        return (\n                                <CardContent>\n                                   <Paper>\n                                    <Grid container xs={12} key={item.id}>\n                                        <Grid item xs={10}>\n                                          <Typography>   {item.FriendName}</Typography>\n                                        </Grid>\n                                        <Grid xs={1}>\n                                            <Button size=\"small\" variant=\"outlined\" >\n                                                <DeleteIcon />\n                                            </Button>\n                                        </Grid>\n                                        <Grid item xs={1}>\n                                            <Button size=\"small\" variant=\"outlined\" onClick={() => handleEdit(item, 'edit')}>\n                                                <FavouriteIcon />\n                                            </Button>\n                                        </Grid>\n                                    </Grid>\n                                    </Paper>\n                                </CardContent>\n                        )\n                    })}\n            </Card>\n        </React.Fragment>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        comments: state.commentMessages\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleDelete: (id) => dispatch({ type: ActionTypes.DELETE_TWEET, id }),\n        handleUpdate: (item) => dispatch({ type: ActionTypes.EDIT_TWEET, item })\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowTweets);"]},"metadata":{},"sourceType":"module"}