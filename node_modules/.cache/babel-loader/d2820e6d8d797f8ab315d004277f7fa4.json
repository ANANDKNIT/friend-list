{"ast":null,"code":"import _objectSpread from \"/home/anand/Desktop/test/toaster-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport * as ActionTypes from \"../actions/FriendListActions\";\nconst InitialState = {\n  friendsList: [{\n    id: 1,\n    friendName: \"Theodore Roosevelt\",\n    favourite: true\n  }, {\n    id: 2,\n    friendName: \"Abraham Lincoln\",\n    favourite: false\n  }, {\n    id: 3,\n    friendName: \"Goerge Washington\",\n    favourite: false\n  }]\n};\n\nconst FriendsListReducer = (state = InitialState, action) => {\n  let newState;\n\n  switch (action.type) {\n    case ActionTypes.ADD_FRIEND:\n      newState = _objectSpread({}, state, {\n        friendsList: action.value\n      });\n      return newState;\n\n    case ActionTypes.DELETE_FRIEND:\n      console.log(action.id);\n      const deleteFriend = state.friendsList.filter(item => item.id !== action.id);\n      newState = _objectSpread({}, state, {\n        friendsList: deleteFriend\n      });\n      return newState;\n\n    case ActionTypes.CHANGE_FAVOURITE_LIST:\n      const editedValue = state.friendsList.map(item => {\n        if (item.id === action.item.id) {\n          item.favourite = !action.item.favourite;\n          return item;\n        } else return item;\n      });\n      newState = _objectSpread({}, state, {\n        friendsList: editedValue\n      });\n      return newState;\n\n    default:\n      return state;\n  }\n};\n\nexport default FriendsListReducer;","map":{"version":3,"sources":["/home/anand/Desktop/test/toaster-test/src/store/reducers/FriendListReducer.js"],"names":["ActionTypes","InitialState","friendsList","id","friendName","favourite","FriendsListReducer","state","action","newState","type","ADD_FRIEND","value","DELETE_FRIEND","console","log","deleteFriend","filter","item","CHANGE_FAVOURITE_LIST","editedValue","map"],"mappings":";AAAA,OAAO,KAAKA,WAAZ,MAA6B,8BAA7B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAE,CACX;AAAEC,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,UAAU,EAAE,oBAArB;AAA2CC,IAAAA,SAAS,EAAE;AAAtD,GADW,EAEX;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,UAAU,EAAE,iBAArB;AAAwCC,IAAAA,SAAS,EAAE;AAAnD,GAFW,EAGX;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,UAAU,EAAE,mBAArB;AAA0CC,IAAAA,SAAS,EAAE;AAArD,GAHW;AADM,CAArB;;AAQA,MAAMC,kBAAkB,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AAC3D,MAAIC,QAAJ;;AACA,UAAQD,MAAM,CAACE,IAAf;AACE,SAAKV,WAAW,CAACW,UAAjB;AACEF,MAAAA,QAAQ,qBACHF,KADG;AAENL,QAAAA,WAAW,EAAEM,MAAM,CAACI;AAFd,QAAR;AAIA,aAAOH,QAAP;;AACF,SAAKT,WAAW,CAACa,aAAjB;AACEC,MAAAA,OAAO,CAACC,GAAR,CAAYP,MAAM,CAACL,EAAnB;AACA,YAAMa,YAAY,GAAGT,KAAK,CAACL,WAAN,CAAkBe,MAAlB,CACnBC,IAAI,IAAIA,IAAI,CAACf,EAAL,KAAYK,MAAM,CAACL,EADR,CAArB;AAGAM,MAAAA,QAAQ,qBACHF,KADG;AAENL,QAAAA,WAAW,EAAEc;AAFP,QAAR;AAIA,aAAOP,QAAP;;AAEF,SAAKT,WAAW,CAACmB,qBAAjB;AACE,YAAMC,WAAW,GAAGb,KAAK,CAACL,WAAN,CAAkBmB,GAAlB,CAAsBH,IAAI,IAAI;AAChD,YAAIA,IAAI,CAACf,EAAL,KAAYK,MAAM,CAACU,IAAP,CAAYf,EAA5B,EAAgC;AAC9Be,UAAAA,IAAI,CAACb,SAAL,GAAiB,CAACG,MAAM,CAACU,IAAP,CAAYb,SAA9B;AACA,iBAAOa,IAAP;AACD,SAHD,MAGO,OAAOA,IAAP;AACR,OALmB,CAApB;AAMAT,MAAAA,QAAQ,qBACHF,KADG;AAENL,QAAAA,WAAW,EAAEkB;AAFP,QAAR;AAIA,aAAOX,QAAP;;AACF;AACE,aAAOF,KAAP;AA/BJ;AAiCD,CAnCD;;AAoCA,eAAeD,kBAAf","sourcesContent":["import * as ActionTypes from \"../actions/FriendListActions\";\n\nconst InitialState = {\n  friendsList: [\n    { id: 1, friendName: \"Theodore Roosevelt\", favourite: true },\n    { id: 2, friendName: \"Abraham Lincoln\", favourite: false },\n    { id: 3, friendName: \"Goerge Washington\", favourite: false }\n  ]\n};\n\nconst FriendsListReducer = (state = InitialState, action) => {\n  let newState;\n  switch (action.type) {\n    case ActionTypes.ADD_FRIEND:\n      newState = {\n        ...state,\n        friendsList: action.value\n      };\n      return newState;\n    case ActionTypes.DELETE_FRIEND:\n      console.log(action.id);\n      const deleteFriend = state.friendsList.filter(\n        item => item.id !== action.id\n      );\n      newState = {\n        ...state,\n        friendsList: deleteFriend\n      };\n      return newState;\n\n    case ActionTypes.CHANGE_FAVOURITE_LIST:\n      const editedValue = state.friendsList.map(item => {\n        if (item.id === action.item.id) {\n          item.favourite = !action.item.favourite;\n          return item;\n        } else return item;\n      });\n      newState = {\n        ...state,\n        friendsList: editedValue\n      };\n      return newState;\n    default:\n      return state;\n  }\n};\nexport default FriendsListReducer;\n"]},"metadata":{},"sourceType":"module"}