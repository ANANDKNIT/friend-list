{"ast":null,"code":"import _slicedToArray from \"/home/anand/Desktop/test/toaster-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/anand/Desktop/test/toaster-test/src/component/CreateFriendList.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport * as ActionTypes from '../store/actions/FriendListActions';\nimport { Card, CardContent, Button, TextField } from '@material-ui/core';\nlet id = 10;\n\nconst TweetUI = props => {\n  //  React Hook useState instead of state\n  const _React$useState = React.useState(''),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        commentMessage = _React$useState2[0],\n        setCommentMessage = _React$useState2[1];\n\n  const handleChange = event => {\n    console.log(event.target.value); // set data Using Hook\n\n    setCommentMessage(event.target.value);\n    console.log(event, event.key);\n\n    if (event.keyCode === 13 || event.key == 'Enter') {\n      console.log('enter pressed');\n      handlePostComment(event.target.value);\n    }\n  };\n\n  const handlePostComment = value => {\n    let listComments = []; // Don't post message if it is blank \n\n    console.log(value);\n    listComments = [...props.friendsList, {\n      id: id++,\n      friendName: value,\n      favourite: false\n    }];\n    console.log(listComments);\n    props.createTweet(listComments); // After submit Clear textarea\n\n    setCommentMessage('');\n  };\n\n  return React.createElement(Card, {\n    className: \"card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"standard-name\",\n    placeholder: \"Type the name of a friend\",\n    value: commentMessage,\n    onChange: handleChange,\n    margin: \"normal\",\n    fullWidth: true,\n    onKeyPress: handleChange,\n    style: {\n      borderBottom: '1px solid gray'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }));\n};\n\nconst mapStateToProps = state => {\n  const comments = state.commentMessages;\n  return {\n    comments\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createTweet: value => dispatch({\n      type: ActionTypes.ADD_FRIEND,\n      value\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TweetUI);","map":{"version":3,"sources":["/home/anand/Desktop/test/toaster-test/src/component/CreateFriendList.js"],"names":["React","connect","ActionTypes","Card","CardContent","Button","TextField","id","TweetUI","props","useState","commentMessage","setCommentMessage","handleChange","event","console","log","target","value","key","keyCode","handlePostComment","listComments","friendsList","friendName","favourite","createTweet","borderBottom","mapStateToProps","state","comments","commentMessages","mapDispatchToProps","dispatch","type","ADD_FRIEND"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,WAAZ,MAA6B,oCAA7B;AACA,SAASC,IAAT,EAAeC,WAAf,EAA4BC,MAA5B,EAAoCC,SAApC,QAAqD,mBAArD;AAEA,IAAIC,EAAE,GAAG,EAAT;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAEvB;AAFuB,0BAGqBT,KAAK,CAACU,QAAN,CAAe,EAAf,CAHrB;AAAA;AAAA,QAGhBC,cAHgB;AAAA,QAGAC,iBAHA;;AAKvB,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC5BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAN,CAAaC,KAAzB,EAD4B,CAE5B;;AACAN,IAAAA,iBAAiB,CAACE,KAAK,CAACG,MAAN,CAAaC,KAAd,CAAjB;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAAmBA,KAAK,CAACK,GAAzB;;AACA,QAAIL,KAAK,CAACM,OAAN,KAAkB,EAAlB,IAAwBN,KAAK,CAACK,GAAN,IAAa,OAAzC,EAAkD;AAC9CJ,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAK,MAAAA,iBAAiB,CAACP,KAAK,CAACG,MAAN,CAAaC,KAAd,CAAjB;AACH;AACJ,GATD;;AAWA,QAAMG,iBAAiB,GAAIH,KAAD,IAAW;AAEjC,QAAII,YAAY,GAAG,EAAnB,CAFiC,CAGjC;;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACII,IAAAA,YAAY,GAAG,CAAC,GAAGb,KAAK,CAACc,WAAV,EAAuB;AAAEhB,MAAAA,EAAE,EAAEA,EAAE,EAAR;AAAYiB,MAAAA,UAAU,EAAEN,KAAxB;AAA+BO,MAAAA,SAAS,EAAE;AAA1C,KAAvB,CAAf;AACAV,IAAAA,OAAO,CAACC,GAAR,CAAYM,YAAZ;AACAb,IAAAA,KAAK,CAACiB,WAAN,CAAkBJ,YAAlB,EAP6B,CAQ7B;;AACAV,IAAAA,iBAAiB,CAAC,EAAD,CAAjB;AACP,GAVD;;AAYA,SACI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AACI,IAAA,EAAE,EAAC,eADP;AAEI,IAAA,WAAW,EAAC,2BAFhB;AAGI,IAAA,KAAK,EAAED,cAHX;AAII,IAAA,QAAQ,EAAEE,YAJd;AAKI,IAAA,MAAM,EAAC,QALX;AAMI,IAAA,SAAS,MANb;AAOI,IAAA,UAAU,EAAEA,YAPhB;AAQI,IAAA,KAAK,EAAE;AAACc,MAAAA,YAAY,EAAC;AAAd,KARX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAeH,CA3CD;;AA6CA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,QAAMC,QAAQ,GAAGD,KAAK,CAACE,eAAvB;AACA,SAAO;AAAED,IAAAA;AAAF,GAAP;AACH,CAHD;;AAKA,MAAME,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHP,IAAAA,WAAW,EAAGR,KAAD,IAAWe,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEhC,WAAW,CAACiC,UAApB;AAAgCjB,MAAAA;AAAhC,KAAD;AAD7B,GAAP;AAGH,CAJD;;AAMA,eAAejB,OAAO,CAAC2B,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CxB,OAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport * as ActionTypes from '../store/actions/FriendListActions';\nimport { Card, CardContent, Button, TextField } from '@material-ui/core';\n\nlet id = 10;\n\nconst TweetUI = (props) => {\n\n    //  React Hook useState instead of state\n    const [commentMessage, setCommentMessage] = React.useState('');\n\n    const handleChange = (event) => {\n        console.log(event.target.value);\n        // set data Using Hook\n        setCommentMessage(event.target.value);\n        console.log(event, event.key);\n        if (event.keyCode === 13 || event.key == 'Enter') {\n            console.log('enter pressed')\n            handlePostComment(event.target.value);\n        }\n    }\n\n    const handlePostComment = (value) => {\n\n        let listComments = [];\n        // Don't post message if it is blank \n        console.log(value)\n            listComments = [...props.friendsList, { id: id++, friendName: value, favourite: false }];\n            console.log(listComments)\n            props.createTweet(listComments);\n            // After submit Clear textarea\n            setCommentMessage('');\n    }\n\n    return (\n        <Card className=\"card\">\n            <TextField\n                id=\"standard-name\"\n                placeholder=\"Type the name of a friend\"\n                value={commentMessage}\n                onChange={handleChange}\n                margin=\"normal\"\n                fullWidth\n                onKeyPress={handleChange}\n                style={{borderBottom:'1px solid gray'}}\n            />\n            {/* <Button variant=\"outlined\" color='secondary' type=\"submit\" onClick={handlePostComment}>Post a tweet</Button> */}\n        </Card>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    const comments = state.commentMessages\n    return { comments }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createTweet: (value) => dispatch({ type: ActionTypes.ADD_FRIEND, value })\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TweetUI);\n"]},"metadata":{},"sourceType":"module"}