{"ast":null,"code":"import _slicedToArray from \"/home/anand/Desktop/test/toaster-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/anand/Desktop/test/toaster-test/src/component/CreateFriendList.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport * as ActionTypes from '../store/actions/Tweet';\nimport { Card, CardContent, Button } from '@material-ui/core';\nlet id = 1;\n\nconst TweetUI = props => {\n  //  React Hook useState instead of state\n  const _React$useState = React.useState(''),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        commentMessage = _React$useState2[0],\n        setCommentMessage = _React$useState2[1];\n\n  const handleChange = event => {\n    // set data Using Hook\n    setCommentMessage(event.target.value);\n  };\n\n  const handlePostComment = event => {\n    // prevent default submit \n    event.preventDefault();\n    let listComments = []; // Don't post message if it is blank \n\n    if (commentMessage) {\n      listComments = [...props.comments, {\n        id: id++,\n        value: commentMessage\n      }];\n      props.createTweet(listComments); // After submit Clear textarea\n\n      setCommentMessage('');\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"text-wrapper align-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: \"card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"textarea\", {\n    onChange: handleChange,\n    value: commentMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"standard-name\",\n    placeholder: \"Type the name of a friend\",\n    value: commentMessage,\n    onChange: handleChange,\n    margin: \"normal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"secondary\",\n    type: \"submit\",\n    onClick: handlePostComment,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Post a tweet\"))));\n};\n\nconst mapStateToProps = state => {\n  const comments = state.commentMessages;\n  return {\n    comments\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createTweet: value => dispatch({\n      type: ActionTypes.ADD_TWEET,\n      value\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TweetUI);","map":{"version":3,"sources":["/home/anand/Desktop/test/toaster-test/src/component/CreateFriendList.js"],"names":["React","connect","ActionTypes","Card","CardContent","Button","id","TweetUI","props","useState","commentMessage","setCommentMessage","handleChange","event","target","value","handlePostComment","preventDefault","listComments","comments","createTweet","mapStateToProps","state","commentMessages","mapDispatchToProps","dispatch","type","ADD_TWEET"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,WAAZ,MAA6B,wBAA7B;AACA,SAASC,IAAT,EAAeC,WAAf,EAA4BC,MAA5B,QAA0C,mBAA1C;AAEA,IAAIC,EAAE,GAAG,CAAT;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAEvB;AAFuB,0BAGqBR,KAAK,CAACS,QAAN,CAAe,EAAf,CAHrB;AAAA;AAAA,QAGhBC,cAHgB;AAAA,QAGAC,iBAHA;;AAKvB,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAE5B;AACAF,IAAAA,iBAAiB,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAjB;AACH,GAJD;;AAMA,QAAMC,iBAAiB,GAAIH,KAAD,IAAW;AACjC;AACAA,IAAAA,KAAK,CAACI,cAAN;AACA,QAAIC,YAAY,GAAG,EAAnB,CAHiC,CAKjC;;AACA,QAAIR,cAAJ,EAAoB;AAChBQ,MAAAA,YAAY,GAAG,CAAC,GAAGV,KAAK,CAACW,QAAV,EAAoB;AAAEb,QAAAA,EAAE,EAAEA,EAAE,EAAR;AAAYS,QAAAA,KAAK,EAAEL;AAAnB,OAApB,CAAf;AACAF,MAAAA,KAAK,CAACY,WAAN,CAAkBF,YAAlB,EAFgB,CAIhB;;AACAP,MAAAA,iBAAiB,CAAC,EAAD,CAAjB;AACH;AACJ,GAbD;;AAeA,SACI;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAU,IAAA,QAAQ,EAAEC,YAApB;AAAkC,IAAA,KAAK,EAAEF,cAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,SAAD;AACI,IAAA,EAAE,EAAC,eADP;AAEI,IAAA,WAAW,EAAC,2BAFhB;AAGI,IAAA,KAAK,EAAEA,cAHX;AAII,IAAA,QAAQ,EAAEE,YAJd;AAKI,IAAA,MAAM,EAAC,QALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EASI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,UAAhB;AAA2B,IAAA,KAAK,EAAC,WAAjC;AAA6C,IAAA,IAAI,EAAC,QAAlD;AAA2D,IAAA,OAAO,EAAEI,iBAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBATJ,CADJ,CADJ,CADJ;AAiBH,CA3CD;;AA6CA,MAAMK,eAAe,GAAIC,KAAD,IAAW;AAC/B,QAAMH,QAAQ,GAAGG,KAAK,CAACC,eAAvB;AACA,SAAO;AAAEJ,IAAAA;AAAF,GAAP;AACH,CAHD;;AAKA,MAAMK,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHL,IAAAA,WAAW,EAAGL,KAAD,IAAWU,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAExB,WAAW,CAACyB,SAApB;AAA+BZ,MAAAA;AAA/B,KAAD;AAD7B,GAAP;AAGH,CAJD;;AAMA,eAAed,OAAO,CAACoB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CjB,OAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport * as ActionTypes from '../store/actions/Tweet';\nimport { Card, CardContent, Button } from '@material-ui/core';\n\nlet id = 1;\n\nconst TweetUI = (props) => {\n\n    //  React Hook useState instead of state\n    const [commentMessage, setCommentMessage] = React.useState('');\n\n    const handleChange = (event) => {\n\n        // set data Using Hook\n        setCommentMessage(event.target.value);\n    }\n\n    const handlePostComment = (event) => {\n        // prevent default submit \n        event.preventDefault();\n        let listComments = [];\n\n        // Don't post message if it is blank \n        if (commentMessage) {\n            listComments = [...props.comments, { id: id++, value: commentMessage }];\n            props.createTweet(listComments);\n\n            // After submit Clear textarea\n            setCommentMessage('');\n        }\n    }\n\n    return (\n        <div className='text-wrapper align-center'>\n            <Card className='card'>\n                <CardContent>\n                    <textarea onChange={handleChange} value={commentMessage} />\n                    <TextField\n                        id=\"standard-name\"\n                        placeholder=\"Type the name of a friend\"\n                        value={commentMessage}\n                        onChange={handleChange}\n                        margin=\"normal\"\n                    />\n                    <Button variant=\"outlined\" color='secondary' type=\"submit\" onClick={handlePostComment}>Post a tweet</Button>\n                </CardContent>\n            </Card>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    const comments = state.commentMessages\n    return { comments }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createTweet: (value) => dispatch({ type: ActionTypes.ADD_TWEET, value })\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TweetUI);\n"]},"metadata":{},"sourceType":"module"}