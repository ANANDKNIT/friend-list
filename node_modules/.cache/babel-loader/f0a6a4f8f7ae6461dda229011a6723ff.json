{"ast":null,"code":"var _jsxFileName = \"/home/anand/Desktop/test/toaster-test/src/component/ShowFriendsList.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport * as ActionTypes from \"../store/actions/FriendListActions\";\nimport { Card, Typography, Grid, IconButton } from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport FavouriteSelectedIcon from \"@material-ui/icons/Grade\";\nimport FavouriteIcon from \"@material-ui/icons/GradeOutlined\";\nimport ManageGender from \"./Gender\";\n\nconst ShowFriends = props => {\n  // return null if friend list is empty\n  if (!props.friendsList) {\n    return null;\n  }\n\n  return React.createElement(Card, {\n    className: \"card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, props.friendsList.map(item => {\n    return React.createElement(Grid, {\n      container: true,\n      key: item.id,\n      className: \"grid-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h6\",\n      component: \"h6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, item.friendName), React.createElement(Typography, {\n      variant: \"body2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"xxx friends in common\")), React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      className: \"friend-button\",\n      onClick: () => props.handleUpdate(item),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, item.favourite ? React.createElement(FavouriteSelectedIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }) : React.createElement(FavouriteIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      className: \"friend-button\",\n      onClick: () => props.handleDelete(item.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(DeleteIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }))), React.createElement(ManageGender, {\n      item: item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }));\n  }));\n};\n\nconst mapStateToProps = state => {\n  return {\n    friendsList: state.friendsList\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleDelete: id => dispatch({\n      type: ActionTypes.DELETE_FRIEND,\n      id\n    }),\n    handleUpdate: item => dispatch({\n      type: ActionTypes.CHANGE_FAVOURITE_LIST,\n      item\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowFriends);","map":{"version":3,"sources":["/home/anand/Desktop/test/toaster-test/src/component/ShowFriendsList.js"],"names":["React","connect","ActionTypes","Card","Typography","Grid","IconButton","DeleteIcon","FavouriteSelectedIcon","FavouriteIcon","ManageGender","ShowFriends","props","friendsList","map","item","id","friendName","handleUpdate","favourite","handleDelete","mapStateToProps","state","mapDispatchToProps","dispatch","type","DELETE_FRIEND","CHANGE_FAVOURITE_LIST"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport * as ActionTypes from \"../store/actions/FriendListActions\";\nimport { Card, Typography, Grid, IconButton } from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport FavouriteSelectedIcon from \"@material-ui/icons/Grade\";\nimport FavouriteIcon from \"@material-ui/icons/GradeOutlined\";\nimport ManageGender from \"./Gender\"\nconst ShowFriends = props => {\n  // return null if friend list is empty\n  if (!props.friendsList) {\n    return null;\n  }\n\n  return (\n    <Card className=\"card\">\n      {props.friendsList.map(item => {\n        return (\n          <Grid container key={item.id} className=\"grid-container\">\n            <Grid item xs={8}>\n              <Typography variant=\"h6\" component=\"h6\">\n                {item.friendName}\n              </Typography>\n              <Typography variant=\"body2\">xxx friends in common</Typography>\n            </Grid>\n            <Grid item xs={2}>\n              <IconButton\n                className=\"friend-button\"\n                onClick={() => props.handleUpdate(item)}\n              >\n                {item.favourite ? <FavouriteSelectedIcon /> : <FavouriteIcon />}\n              </IconButton>\n            </Grid>\n            <Grid item xs={2}>\n              <IconButton\n                className=\"friend-button\"\n                onClick={() => props.handleDelete(item.id)}\n              >\n                <DeleteIcon />\n              </IconButton>\n            </Grid>\n            <ManageGender item={item}/>\n          </Grid>\n        );\n      })}\n    </Card>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    friendsList: state.friendsList\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleDelete: id => dispatch({ type: ActionTypes.DELETE_FRIEND, id }),\n    handleUpdate: item =>\n      dispatch({ type: ActionTypes.CHANGE_FAVOURITE_LIST, item })\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ShowFriends);\n"]},"metadata":{},"sourceType":"module"}