{"ast":null,"code":"var _jsxFileName = \"/home/anand/Desktop/test/toaster-test/src/component/ShowFriendsList.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport * as ActionTypes from '../store/actions/FriendListActions';\nimport { Card, Button, Typography, Paper, Grid, IconButton } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FavouriteSelectedIcon from '@material-ui/icons/Grade';\nimport FavouriteIcon from '@material-ui/icons/GradeOutlined';\n\nconst ShowFriends = props => {\n  // return null if friend list is empty\n  if (!props.friendsList) {\n    return null;\n  }\n\n  return React.createElement(Card, {\n    className: \"card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, props.friendsList.map(item => {\n    return React.createElement(Grid, {\n      container: true,\n      key: item.id,\n      className: \"grid-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h6\",\n      component: \"h6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \" \", item.friendName), React.createElement(Typography, {\n      variant: \"body2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"xxx friends in common\")), React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"outlined\",\n      onClick: () => props.handleDelete(item.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(DeleteIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      style: {\n        border: '1px solid gray',\n        borderRadius: '0'\n      },\n      variant: \"outlined\",\n      onClick: () => props.handleUpdate(item),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, item.favourite ? React.createElement(FavouriteSelectedIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }) : React.createElement(FavouriteIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }))));\n  }));\n};\n\nconst mapStateToProps = state => {\n  return {\n    friendsList: state.friendsList\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleDelete: id => dispatch({\n      type: ActionTypes.DELETE_FRIEND,\n      id\n    }),\n    handleUpdate: item => dispatch({\n      type: ActionTypes.CHANGE_FAVOURITE_LIST,\n      item\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowFriends);","map":{"version":3,"sources":["/home/anand/Desktop/test/toaster-test/src/component/ShowFriendsList.js"],"names":["React","connect","ActionTypes","Card","Button","Typography","Paper","Grid","IconButton","DeleteIcon","FavouriteSelectedIcon","FavouriteIcon","ShowFriends","props","friendsList","map","item","id","friendName","handleDelete","border","borderRadius","handleUpdate","favourite","mapStateToProps","state","mapDispatchToProps","dispatch","type","DELETE_FRIEND","CHANGE_FAVOURITE_LIST"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux'\nimport * as ActionTypes from '../store/actions/FriendListActions'\nimport { Card, Button, Typography, Paper, Grid, IconButton} from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FavouriteSelectedIcon from '@material-ui/icons/Grade'\nimport FavouriteIcon from '@material-ui/icons/GradeOutlined'\n\n\nconst ShowFriends = (props) => {\n\n    // return null if friend list is empty\n    if (!props.friendsList) {\n        return null;\n    }\n\n    return (\n        <Card className=\"card\">\n            {props.friendsList.map((item) => {\n                return (\n                    <Grid container key={item.id} className=\"grid-container\">\n                        <Grid item xs={8}>\n                            <Typography variant=\"h6\" component=\"h6\"> {item.friendName}</Typography>\n                            <Typography variant=\"body2\">xxx friends in common</Typography>\n                        </Grid>\n                        <Grid item xs={2}>\n                            <Button variant=\"outlined\" onClick={() => props.handleDelete(item.id)} >\n                                <DeleteIcon />\n                            </Button>\n                        </Grid>\n                        <Grid item xs={2}>\n                            <IconButton style={{border:'1px solid gray', borderRadius:'0'}} variant=\"outlined\" onClick={() => props.handleUpdate(item)}>\n                                {item.favourite ?\n                                    <FavouriteSelectedIcon /> :\n                                    <FavouriteIcon />}\n                            </IconButton>\n                        </Grid>\n                    </Grid>\n                )\n            })}\n        </Card>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        friendsList: state.friendsList\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleDelete: (id) => dispatch({ type: ActionTypes.DELETE_FRIEND, id }),\n        handleUpdate: (item) => dispatch({ type: ActionTypes.CHANGE_FAVOURITE_LIST, item })\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowFriends);"]},"metadata":{},"sourceType":"module"}